{
  "hash": "dc5c034a21ea83b8633e4ba12d88926c",
  "result": {
    "markdown": "---\ntitle: \"Regulatory Repositories\"\nauthor:\n  - name: Coline Zeballos\n    affiliations: \n      - name: Roche\n  - name: Yann Féat\n    affiliations:\n      - name: mainanalytics\nformat: revealjs\n---\n\n\n## Introduction\n\n- R has a meticulously maintained ecosystem, which is immensely valuable in a regulatory space\n- In a regulatory setting, the trust of any software needs to be thoroughly documented (NOTE: replace with more precise wording based on HA documents)\n\n::: {.notes}\nColine\n:::\n\n## Goals\n\n- Provide a community-maintained catalog of package quality indicators (\"risk metrics\")\n- Serve quality indicators in a standard format\n- Thoroughly document the system used to perform quality assessment\n- Demonstrate how regulatory-ready risk assessments can be provided using public quality indicators\n- Serve subsets of packages that conform to a specified risk tolerance\n- Improve transparency of industry R package adoption, endorsement and regulator interaction\n\n::: {.notes}\nColine\n:::\n\n## An evolving R ecosystem\n\n- (NOTE: show interaction between CRAN, RVH Reg R Repo (us), RC Submissions WG, RC Repositories WG, pharmaverse, other?)\n\n# Interacting with the repo\n\n## Packages risk filters\n\n::: columns\n::: {.column width=\"50%\"}\n- Helper package for system administrators\n- Restricts packages available for installation to those fitting in a policy\n- Uses packages metadata in the repo\n- May be use together with manual checks (e.g. read a statistical review)\n:::\n::: {.column width=\"50%\"}\n- Example of automated filter for safety-critical activities:\n  - Acceptance Criteria 1: “Code Coverage > 95% ”\n  - Acceptance Criteria 2: “Package documentation available”\n:::\n:::\n\n::: {.notes}\nYann\n:::\n\n## Usage\n\n\n::: {.cell}\n\n:::\n\n\n::: columns\n::: {.column width=\"40%\"}\n### Unfiltered\n\n::: {.cell}\n\n```{.r .cell-code}\navailable.packages()\n```\n:::\n\n:::\n\n::: {.column width=\"60%\"}\n### Filtered\n\n::: {.cell}\n\n```{.r .cell-code}\nfltr <- risk_filter(\n  ReverseDependencies >= 0.99)\noptions(available_packages_filters = fltr)\navailable.packages()\n```\n:::\n\n:::\n:::\n\n::: {.notes}\nYann\n:::\n\n# Repository ‘back-end’\n\n## Repository forked from `r-hub/repos`\n\n![](resources/repos_pkgs.png)\n\n::: {.notes}\nYann\n:::\n\n## Packages cohort validation\n\n* Risk metrics calculated on packages with new versions and on their reverse dependencies\n* Uses the GitHub API to fetch new release assets\n\n\n::: {.notes}\nYann\n:::\n\n# Our roadmap\n\n## What's next\n\n* (NOTE: STAGE 1: Pipeline Integration)\n\n# Closing\n\n## Join us\n\n* (NOTE: link to GH join us issue, add R Consortium info)\n\n## Why Join the R Consortium\n* Community Leadership and Support\n* Funding Key Infrastructure and Projects\n* Influence Over Project Development\n![Elephant](elephant.png){width=300}\n\n## Thank you\n\n* (NOTE: List of Core team members)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}